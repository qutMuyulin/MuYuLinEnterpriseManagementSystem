<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ognice.dao.StaffMapper">
	<resultMap id="BaseResultMap" type="com.ognice.domain.Staff">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="jobtypeid" property="jobtypeid" jdbcType="INTEGER" />
		<result column="jobtypename" property="jobtypename" jdbcType="VARCHAR" />
		<result column="orgid" property="orgid" jdbcType="INTEGER" />
		<result column="orgname" property="orgname" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="basemoney" property="basemoney" jdbcType="VARCHAR" />
		<result column="desc" property="desc" jdbcType="VARCHAR" />
		<result column="intime" property="intime" jdbcType="TIMESTAMP" />
		<result column="picurl" property="picurl" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		`id`,`name`,`jobtypeid`,`jobtypename`,`orgid`,`orgname`,`sex`,`basemoney`,`desc`,`intime`,`picurl`
		
	</sql>
	<select id="selectStaffById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from `staff` where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="page" parameterType="com.ognice.controller.common.PageSearchParam" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from `staff` where 1=1
		<if test="params!=null">
		<if test="params.id !=null ">
		AND `id` = #{params.id}
		</if>
		<if test="params.name !=null and params.name!=''">
		 AND `name` like concat('%',#{params.name},'%')
		</if>
		<if test="params.jobtypeid !=null ">
		AND `jobtypeid` = #{params.jobtypeid}
		</if>
		<if test="params.jobtypename !=null and params.jobtypename!=''">
		 AND `jobtypename` like concat('%',#{params.jobtypename},'%')
		</if>
		<if test="params.orgid !=null ">
		AND `orgid` = #{params.orgid}
		</if>
		<if test="params.orgname !=null and params.orgname!=''">
		 AND `orgname` like concat('%',#{params.orgname},'%')
		</if>
		<if test="params.sex !=null and params.sex!=''">
		 AND `sex` like concat('%',#{params.sex},'%')
		</if>
		<if test="params.basemoney !=null and params.basemoney!=''">
		 AND `basemoney` like concat('%',#{params.basemoney},'%')
		</if>
		<if test="params.desc !=null and params.desc!=''">
		 AND `desc` like concat('%',#{params.desc},'%')
		</if>
		<if test="params.intime !=null ">
		AND `intime` = #{params.intime}
		</if>
		<if test="params.picurl !=null and params.picurl!=''">
		 AND `picurl` like concat('%',#{params.picurl},'%')
		</if>
		</if>
		order by id desc
		<if test="page!=null"> limit #{page},#{pagesize}
		</if>
	</select>

	<delete id="delete" parameterType="java.lang.Integer"> delete from `staff` where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ognice.domain.Staff"> insert into `staff` (
		`id`,`name`,`jobtypeid`,`jobtypename`,`orgid`,`orgname`,`sex`,`basemoney`,`desc`,`intime`,`picurl`	
	) values (
		#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{jobtypeid,jdbcType=INTEGER},
		#{jobtypename,jdbcType=VARCHAR},
		#{orgid,jdbcType=INTEGER},
		#{orgname,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR},
		#{basemoney,jdbcType=VARCHAR},
		#{desc,jdbcType=VARCHAR},
		#{intime,jdbcType=TIMESTAMP},
		#{picurl,jdbcType=VARCHAR}		
	)
	</insert>

	<update id="update" parameterType="com.ognice.domain.Staff">
		update `staff`
		<set>
		<if test="id != null">
		`id`= #{id,jdbcType=INTEGER},
		</if>
		<if test="name != null">
		`name`= #{name,jdbcType=VARCHAR},
		</if>
		<if test="jobtypeid != null">
		`jobtypeid`= #{jobtypeid,jdbcType=INTEGER},
		</if>
		<if test="jobtypename != null">
		`jobtypename`= #{jobtypename,jdbcType=VARCHAR},
		</if>
		<if test="orgid != null">
		`orgid`= #{orgid,jdbcType=INTEGER},
		</if>
		<if test="orgname != null">
		`orgname`= #{orgname,jdbcType=VARCHAR},
		</if>
		<if test="sex != null">
		`sex`= #{sex,jdbcType=VARCHAR},
		</if>
		<if test="basemoney != null">
		`basemoney`= #{basemoney,jdbcType=VARCHAR},
		</if>
		<if test="desc != null">
		`desc`= #{desc,jdbcType=VARCHAR},
		</if>
		<if test="intime != null">
		`intime`= #{intime,jdbcType=TIMESTAMP},
		</if>
		<if test="picurl != null">
		`picurl`= #{picurl,jdbcType=VARCHAR},
		</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>